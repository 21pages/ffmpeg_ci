name: ffmpeg

on:
  workflow_dispatch:
  # push:
  # pull_request:

env:
  TAG_NAME: "dev"
  NDK_VERSION: "r26b"
  ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true # https://github.com/actions/checkout/issues/1590#issuecomment-2208181786
  FFMPEG_VERSION_WIN_LINUX: "release/5.1" # higher version ffmpeg requires higher version of nvidia driver
  FFMPEG_VERSION: "release/7.0"
  COMMON_CONF: "--disable-shared --enable-static --enable-pic --disable-everything  --disable-programs  --disable-doc  --disable-htmlpages  --disable-manpages  --disable-podpages  --disable-txtpages  --disable-network  --disable-appkit  --disable-coreimage   --disable-metal  --disable-sdl2  --disable-securetransport  --disable-vulkan  --disable-audiotoolbox  --disable-v4l2-m2m  --disable-debug  --disable-valgrind-backtrace  --disable-large-tests  --disable-avdevice  --enable-avcodec  --enable-avformat  --disable-avfilter --disable-swresample  --disable-swscale  --disable-postproc  --enable-decoder=h264  --enable-decoder=hevc  --enable-parser=h264  --enable-parser=hevc  --enable-bsf=h264_mp4toannexb  --enable-bsf=hevc_mp4toannexb --enable-bsf=h264_metadata  --enable-bsf=hevc_metadata --enable-muxer=mp4  --enable-protocol=file"

permissions:
  contents: write

jobs:
  build-for-wasm:
    if: true
    name: ${{ matrix.job.target }} (${{ matrix.job.os }})
    runs-on: ${{ matrix.job.os }}
    container:
    strategy:
      fail-fast: false
      matrix:
        job:
          - { target: x86_64-unknown-linux-gnu, os: ubuntu-20.04, arch: x86_64}      
    steps:
  
      - uses: actions/checkout@v2
  
      - name: tools
        run: |
          apt-get -y update
          apt-get -y install build-essential yasm pkg-config git zip
      
      - name: wasm sdk
        run: |
          wget https://github.com/WebAssembly/wasi-sdk/releases/download/wasi-sdk-24/wasi-sdk-24.0-x86_64-linux.tar.gz
          tar -xvf wasi-sdk-24.0-x86_64-linux.tar.gz
          rm wasi-sdk-24.0-x86_64-linux.tar.gz
          mv wasi-sdk-24.0 /opt/wasi-sdk
  
      - name: binaryen
        run: |
          wget https://github.com/WebAssembly/binaryen/releases/download/version_118/binaryen-version_118-x86_64-linux.tar.gz
          tar -xvf binaryen-version_118-x86_64-linux.tar.gz
          rm binaryen-version_118-x86_64-linux.tar.gz
          mv binaryen-version_118 /opt/binaryen
      
      - name: Source FFmpeg
        run: |
          git clone --depth=1 -b n7.0.2 https://github.com/FFmpeg/FFmpeg.git
          mkdir includes
          mkdir libs
          mkdir release
          ls -al
        
      - name: Configure
        working-directory: ${{github.workspace}}/FFmpeg
        run: |
          set -euox pipefail
          ./configure  \
          --prefix=../release \
          
          | tee ../release/configure.log
  
      - name: Build
        working-directory: FFmpeg
        run: |
          make -j32 && make install
          rm -r ../release/share
      
      - name: Create Archive
        uses: thedoctor0/zip-release@0.7.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          type: 'zip'
          filename: 'ffmpeg_linux_${{ matrix.job.arch }}.zip'
          path: 'release'
      
      - name: Publish
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          prerelease: true
          tag_name: ${{ env.TAG_NAME }}
          files: | 
            ./ffmpeg_linux_${{ matrix.job.arch }}.zip
  
 